%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Camera calibration and distortion parameters (OpenCV)
Camera.fx: 347.997559
Camera.fy: 347.997559
Camera.cx: 320.0
Camera.cy: 240.0

Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0

Camera.width: 640
Camera.height: 480

# Camera frames per second 
Camera.fps: 30.0

# stereo baseline times fx
Camera.bf: 17.39987795

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times.
ThDepth: 10000000.0

# Transformation from camera 0 to body-frame (imu)
Tbc: !!opencv-matrix
   rows: 4
   cols: 4
   dt: f
   data: [ 0.0,  0.0,  1.0,  0.00174,
          -1.0,  0.0,  0.0, -0.00552,
           0.0, -1.0,  0.0, -0.01760,
           0.0,  0.0,  0.0,  1.00000]
#   data: [0.0, -1.0,  0.0, -0.005520, 
#       0.0,  0.0, -1.0, -0.017600, 
#       1.0,  0.0,  0.0, -0.001740,
#       0.0,  0.0,  0.0, 1.0000000]

# IMU noise
IMU.NoiseGyro: 1.6968e-04 
IMU.NoiseAcc:  2.0000e-04
IMU.GyroWalk:  1.9393e-05
IMU.AccWalk:  3.0000e-03
IMU.Frequency: 333

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
#LEFT.height: 480
#LEFT.width: 640
#LEFT.D: !!opencv-matrix
#   rows: 1
#   cols: 5
#   dt: d
#   data: [0.0, 0.0, 0.0, 0.0, 0.0]
#LEFT.K: !!opencv-matrix
#   rows: 3
#   cols: 3
#   dt: d
#   data: [347.997559, 0.0, 320.0, 0.0, 347.997559, 240.0, 0.0, 0.0, 1.0]
#LEFT.R:  !!opencv-matrix
#   rows: 3
#   cols: 3
#   dt: d
#   data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
#LEFT.Rf:  !!opencv-matrix
#   rows: 3
#   cols: 3
#   dt: f
#   data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
#LEFT.P:  !!opencv-matrix
#   rows: 3
#   cols: 4
#   dt: d
#   data: [347.997559, 0.0, 320.0, 0.0, 0.0, 347.997559, 240.0, 0.0, 0.0, 0.0, 1.0, 0.0]

#RIGHT.height: 480
#RIGHT.width: 640
#RIGHT.D: !!opencv-matrix
#   rows: 1
#   cols: 5
#   dt: d
#   data:[0.0, 0.0, 0.0, 0.0, 0.0]
#RIGHT.K: !!opencv-matrix
#   rows: 3
#   cols: 3
#   dt: d
#   data: [347.997559, 0.0, 320.0, 0.0, 347.997559, 240.0, 0.0, 0.0, 1.0]
#RIGHT.R:  !!opencv-matrix
#   rows: 3
#   cols: 3
#   dt: d
#   data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
#RIGHT.P:  !!opencv-matrix
#   rows: 3
#   cols: 4
#   dt: d
#   data: [347.997559, 0.0, 320.0, -17.39987795, 0.0, 347.997559, 240.0, 0.0, 0.0, 0.0, 1.0, 0.0]


#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500

